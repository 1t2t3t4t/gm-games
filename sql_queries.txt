./bbgm/views.py:        g.db.execute('SELECT league_id FROM leagues WHERE user_id = %s ORDER BY league_id ASC', (session['user_id'],))
./bbgm/views.py:            g.db.execute('SELECT team_id, season, pm_phase FROM %s_game_attributes', (league_id,))
./bbgm/views.py:            g.db.execute('SELECT CONCAT(region, " ", name) FROM %s_team_attributes WHERE team_id = %s AND season = %s', (league_id, user_team_id, season))
./bbgm/views.py:            g.db.execute('SELECT 1 FROM users WHERE username = %s', (request.form['username'],))
./bbgm/views.py:                g.db.execute('INSERT INTO users (username, password) VALUES (%s, %s)', (request.form['username'], request.form['password']))
./bbgm/views.py:    g.db.execute('SELECT user_id FROM leagues WHERE league_id = %s', (league_id,))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT COUNT(*) FROM %s_player_attributes WHERE team_id = %s', (g.league_id, g.user_team_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT team_id FROM %s_player_attributes WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT contract_amount*(1+free_agent_times_asked/10), contract_expiration FROM %s_player_attributes WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('INSERT INTO %s_negotiation (player_id, team_amount, team_years, player_amount, player_years, num_offers_made, max_offers, resigning) VALUES (%s, %s, %s, %s, %s, 0, %s, %s)', (g.league_id, player_id, player_amount, player_years, player_amount, player_years, max_offers, resigning))
./bbgm/core/contract_negotiation.py:        g.db.execute('UPDATE %s_player_attributes SET free_agent_times_asked = free_agent_times_asked + 1 WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT player_amount, player_years, num_offers_made, max_offers FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('UPDATE %s_negotiation SET team_amount = %s, team_years = %s, player_amount = %s, player_years = %s, num_offers_made = %s WHERE player_id = %s', (g.league_id, team_amount, team_years, player_amount, player_years, num_offers_made, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT player_amount, player_years, resigning FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('UPDATE %s_player_attributes SET team_id = %s, contract_amount = %s, contract_expiration = %s WHERE player_id = %s', (g.league_id, g.user_team_id, player_amount, g.season + player_years, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('DELETE FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('DELETE FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/contract_negotiation.py:    g.db.execute('SELECT 1 FROM %s_negotiation', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('UPDATE %s_game_attributes SET season = season + 1', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('DELETE FROM %s_active_playoff_series', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('SELECT team_id, division_id, region, name, abbreviation, cash FROM %s_team_attributes WHERE season = %s', (g.league_id, g.season - 1))
./bbgm/core/season.py:            g.db.execute('INSERT INTO %s_team_attributes (team_id, division_id, region, name, abbreviation, cash, season) VALUES (%s, %s, %s, %s, %s, %s, %s)', (g.league_id, row[0], row[1], row[2], row[3], row[4], row[5], g.season))
./bbgm/core/season.py:        g.db.execute('SELECT player_id FROM %s_player_attributes', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('SELECT ta.team_id, COUNT(*) FROM %s_team_attributes as ta, %s_player_attributes as pa WHERE ta.team_id = pa.team_id AND ta.season = %s GROUP BY pa.team_id', (g.league_id, g.league_id, g.season))
./bbgm/core/season.py:                    g.db.execute('SELECT pa.player_id FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = %s ORDER BY pr.potential ASC LIMIT %s', (g.league_id, g.league_id, team_id, num_players_on_roster-15))
./bbgm/core/season.py:            g.db.execute('SELECT ta.team_id FROM %s_team_attributes as ta, %s_league_divisions as ld WHERE ld.division_id = ta.division_id AND ld.conference_id = %s AND ta.season = %s ORDER BY 1.0*ta.won/(ta.won + ta.lost) DESC LIMIT 8', (g.league_id, g.league_id, conference_id, g.season))
./bbgm/core/season.py:                    g.db.execute('UPDATE %s_team_attributes SET playoffs = 1 WHERE season = %s AND team_id = %s', (g.league_id, g.season, g.user_team_id))
./bbgm/core/season.py:            g.db.execute(query, (g.league_id, conference_id * 4 + 1, teams[0], teams[7], 1, 8))
./bbgm/core/season.py:            g.db.execute(query, (g.league_id, conference_id * 4 + 2, teams[3], teams[4], 4, 5))
./bbgm/core/season.py:            g.db.execute(query, (g.league_id, conference_id * 4 + 3, teams[2], teams[5], 3, 6))
./bbgm/core/season.py:            g.db.execute(query, (g.league_id, conference_id * 4 + 4, teams[1], teams[6], 2, 7))
./bbgm/core/season.py:        g.db.execute('DELETE FROM %s_released_players_salaries WHERE contract_expiration <= %s', (g.league_id, g.season))
./bbgm/core/season.py:        g.db.execute('UPDATE %s_player_attributes SET contract_expiration = contract_expiration + 1 WHERE team_id = -1', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('SELECT player_id, team_id, name FROM %s_player_attributes WHERE contract_expiration = %s AND team_id >= 0', (g.league_id, g.season))
./bbgm/core/season.py:        g.db.execute('DELETE FROM %s_negotiation', (g.league_id))
./bbgm/core/season.py:        g.db.execute('SELECT player_id FROM %s_player_attributes WHERE team_id = -1', (g.league_id,))
./bbgm/core/season.py:        g.db.execute('SELECT player_id FROM %s_player_attributes WHERE team_id = -2', (g.league_id,))
./bbgm/core/season.py:            g.db.execute('UPDATE %s_player_attributes SET draft_year = -1, draft_round = -1, draft_pick = -1, draft_team_id = -1 WHERE player_id = %s', (g.league_id, player_id))
./bbgm/core/season.py:    g.db.execute('UPDATE %s_game_attributes SET phase = %s', (g.league_id, g.phase))
./bbgm/core/season.py:    g.db.execute('SELECT team_id, division_id, (SELECT conference_id FROM %s_league_divisions as ld WHERE ld.division_id = ta.division_id) FROM %s_team_attributes as ta WHERE season = %s', (g.league_id, g.league_id, g.season))
./bbgm/core/season.py:    g.db.execute('UPDATE %s_game_attributes SET schedule = %s', (g.league_id, pickle.dumps(schedule)))
./bbgm/core/season.py:    g.db.execute('SELECT schedule FROM %s_game_attributes', (g.league_id,))
./bbgm/core/draft.py:    g.db.execute('SELECT MAX(player_id) + 1 FROM %s_player_attributes', (g.league_id,))
./bbgm/core/draft.py:    g.db.execute('SELECT pr.player_id FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = -2 ORDER BY pr.overall + 2*pr.potential DESC', (g.league_id, g.league_id))
./bbgm/core/draft.py:        g.db.execute('UPDATE %s_player_ratings SET roster_position = %s WHERE player_id = %s', (g.league_id, roster_position, player_id))
./bbgm/core/draft.py:        g.db.execute('SELECT team_id, abbreviation FROM %s_team_attributes WHERE season =  %s ORDER BY 1.0*won/(won + lost) ASC', (g.league_id, g.season))
./bbgm/core/draft.py:            g.db.execute('INSERT INTO %s_draft_results (season, draft_round, pick, team_id, abbreviation, player_id, name, position) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)', (g.league_id, g.season, draft_round, pick, team_id, abbreviation, 0, '', ''))
./bbgm/core/draft.py:    g.db.execute('SELECT team_id, draft_round, pick FROM %s_draft_results WHERE season =  %s AND player_id = 0 ORDER BY draft_round, pick ASC', (g.league_id, g.season))
./bbgm/core/draft.py:        g.db.execute('SELECT pr.player_id FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = -2 ORDER BY pr.overall + 2*pr.potential DESC LIMIT %s, 1', (g.league_id, g.league_id, team_pick))
./bbgm/core/draft.py:    g.db.execute('SELECT team_id, draft_round, pick FROM %s_draft_results WHERE season =  %s AND player_id = 0 ORDER BY draft_round, pick ASC LIMIT 1', (g.league_id, g.season))
./bbgm/core/draft.py:    g.db.execute('SELECT pa.name, pa.position, pa.born_date, pr.overall, pr.potential FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = -2 AND pr.player_id = %s', (g.league_id, g.league_id, player_id))
./bbgm/core/draft.py:    g.db.execute('SELECT MAX(pr.roster_position) + 1 FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = %s', (g.league_id, g.league_id, team_id))
./bbgm/core/draft.py:    g.db.execute('UPDATE %s_player_attributes SET team_id = %s, draft_year = %s, draft_round = %s, draft_pick = %s, draft_team_id = %s WHERE player_id = %s', (g.league_id, team_id, g.season, draft_round, pick, team_id, player_id))
./bbgm/core/draft.py:    g.db.execute('UPDATE %s_draft_results SET player_id = %s, name = %s, position = %s, born_date = %s, overall = %s, potential = %s WHERE season = %s AND draft_round = %s AND pick = %s', (g.league_id, player_id, name, position, born_date, overall, potential, g.season, draft_round, pick))
./bbgm/core/draft.py:    g.db.execute('UPDATE %s_player_ratings SET roster_position = %s WHERE player_id = %s', (g.league_id, roster_position, player_id))
./bbgm/core/draft.py:    g.db.execute('UPDATE %s_player_attributes SET contract_amount = %s, contract_expiration = %s WHERE player_id = %s', (g.league_id, contract_amount, contract_expiration, player_id))
./bbgm/core/draft.py:    g.db.execute('SELECT 1 FROM %s_draft_results WHERE season = %s AND player_id = 0', (g.league_id, g.season))
./bbgm/core/league.py:    g.db.execute("INSERT INTO leagues (user_id, description) VALUES (%s, 'THIS SHOULD BE UPDATED SOMEWHERE')", (session['user_id'],))
./bbgm/core/league.py:    g.db.execute('SELECT league_id FROM leagues WHERE user_id = %s ORDER BY league_id DESC LIMIT 1', (session['user_id'],))
./bbgm/core/league.py:    g.db.execute('CREATE TABLE %s_team_attributes SELECT * FROM teams', (g.league_id,))
./bbgm/core/league.py:    g.db.execute('UPDATE %s_game_attributes SET team_id = %s', (g.league_id, team_id))
./bbgm/core/league.py:    g.db.execute('SELECT team_id, season, phase, schedule, version FROM %s_game_attributes LIMIT 1', (g.league_id,))
./bbgm/core/league.py:    g.db.execute("DELETE FROM leagues WHERE league_id = %s", (league_id,))
./bbgm/core/league.py:        g.db.execute("DROP TABLE %s_%s" % (league_id, table))
./bbgm/core/player.py:        g.db.execute(query, (g.league_id, self.rating['overall'], self.rating['height'], self.rating['strength'], self.rating['speed'], self.rating['jumping'], self.rating['endurance'], self.rating['shooting_inside'], self.rating['shooting_layups'], self.rating['shooting_free_throws'], self.rating['shooting_two_pointers'], self.rating['shooting_three_pointers'], self.rating['blocks'], self.rating['steals'], self.rating['dribbling'], self.rating['passing'], self.rating['rebounding'], self.rating['potential'], self.id))
./bbgm/core/player.py:        g.db.execute('UPDATE %s_player_attributes SET team_id = -1, contract_amount = %s, contract_expiration = %s,'
./bbgm/core/player.py:        g.db.execute('SELECT contract_amount, contract_expiration, team_id FROM %s_player_attributes WHERE player_id = %s', (g.league_id, self.id))
./bbgm/core/player.py:        g.db.execute('INSERT INTO %s_released_players_salaries (player_id, team_id, contract_amount, contract_expiration) VALUES (%s, %s, %s, %s)', (g.league_id, self.id, team_id, contract_amount, contract_expiration))
./bbgm/core/game.py:        g.db.execute('SELECT won+lost, 1.0*won/(won + lost) FROM %s_team_attributes WHERE season = %s AND (team_id = %s OR team_id = %s)', (g.league_id, g.season, self.team[0]['id'], self.team[1]['id']))
./bbgm/core/game.py:            g.db.execute('SELECT ld.conference_id, ta.division_id FROM %s_team_attributes as ta, %s_league_divisions as ld WHERE ta.team_id = %s AND ta.season = %s AND ta.division_id = ld.division_id', (g.league_id, g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:            g.db.execute('SELECT pa.player_id FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = %s ORDER BY pr.roster_position ASC LIMIT 5', (g.league_id, g.league_id, self.team[t]['id']))
./bbgm/core/game.py:        g.db.execute(query, (g.league_id, self.team[t]['player'][p]['id'], self.team[t]['id'], self.id, g.season, self.is_playoffs, self.team[t]['player'][p]['stat']['starter'], int(round(self.team[t]['player'][p]['stat']['minutes'])), self.team[t]['player'][p]['stat']['field_goals_made'], self.team[t]['player'][p]['stat']['field_goals_attempted'], self.team[t]['player'][p]['stat']['three_pointers_made'], self.team[t]['player'][p]['stat']['three_pointers_attempted'], self.team[t]['player'][p]['stat']['free_throws_made'], self.team[t]['player'][p]['stat']['free_throws_attempted'], self.team[t]['player'][p]['stat']['offensive_rebounds'], self.team[t]['player'][p]['stat']['defensive_rebounds'], self.team[t]['player'][p]['stat']['assists'], self.team[t]['player'][p]['stat']['turnovers'], self.team[t]['player'][p]['stat']['steals'], self.team[t]['player'][p]['stat']['blocks'], self.team[t]['player'][p]['stat']['personal_fouls'], self.team[t]['player'][p]['stat']['points']))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_active_playoff_series SET won_home = won_home + 1 WHERE team_id_home = %s AND team_id_away = %s', (g.league_id, self.team[t]['id'], self.team[t2]['id']))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_active_playoff_series SET won_away = won_away + 1 WHERE team_id_home = %s AND team_id_away = %s', (g.league_id, self.team[t2]['id'], self.team[t]['id']))
./bbgm/core/game.py:            g.db.execute('SELECT SUM(contract_amount) * 1000 / 82 FROM %s_released_players_salaries WHERE team_id = %s', (g.league_id, self.team[t]['id']))
./bbgm/core/game.py:            g.db.execute('SELECT SUM(contract_amount) * 1000 / 82 FROM %s_player_attributes WHERE team_id = %s', (g.league_id, self.team[t]['id']))
./bbgm/core/game.py:        g.db.execute('UPDATE %s_team_attributes SET cash = cash + %s - %s WHERE season = %s AND team_id = %s', (g.league_id, g.ticket_price * self.attendance, cost, g.season, self.team[t]['id']))
./bbgm/core/game.py:        g.db.execute(query, (g.league_id, self.team[t]['id'], self.team[t2]['id'], self.id, g.season, self.is_playoffs, won, self.home[t], int(round(self.team[t]['stat']['minutes'])), self.team[t]['stat']['field_goals_made'], self.team[t]['stat']['field_goals_attempted'], self.team[t]['stat']['three_pointers_made'], self.team[t]['stat']['three_pointers_attempted'], self.team[t]['stat']['free_throws_made'], self.team[t]['stat']['free_throws_attempted'], self.team[t]['stat']['offensive_rebounds'], self.team[t]['stat']['defensive_rebounds'], self.team[t]['stat']['assists'], self.team[t]['stat']['turnovers'], self.team[t]['stat']['steals'], self.team[t]['stat']['blocks'], self.team[t]['stat']['personal_fouls'], self.team[t]['stat']['points'], self.team[t2]['stat']['points'], self.attendance, cost))
./bbgm/core/game.py:            g.db.execute('UPDATE %s_team_attributes SET won = won + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_team_attributes SET won_div = won_div + 1, won_conf = won_conf + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_team_attributes SET won_conf = won_conf + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:            g.db.execute('UPDATE %s_team_attributes SET lost = lost + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_team_attributes SET lost_div = lost_div + 1, lost_conf = lost_conf + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_team_attributes SET lost_conf = lost_conf + 1 WHERE team_id = %s AND season = %s', (g.league_id, self.team[t]['id'], g.season))
./bbgm/core/game.py:    g.db.execute('SELECT pa.player_id FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = %s ORDER BY pr.roster_position ASC', (g.league_id, g.league_id, team_id))
./bbgm/core/game.py:                g.db.execute('SELECT MAX(series_round) FROM %s_active_playoff_series', (g.league_id,))
./bbgm/core/game.py:                g.db.execute('SELECT team_id_home, team_id_away FROM %s_active_playoff_series WHERE won_home < 4 AND won_away < 4 AND series_round = %s', (g.league_id, current_round))
./bbgm/core/game.py:                    g.db.execute('SELECT series_id, team_id_home, team_id_away, seed_home, '
./bbgm/core/game.py:                            g.db.execute('UPDATE %s_team_attributes SET won_conference = 1 WHERE season = %s AND '
./bbgm/core/game.py:                            g.db.execute('UPDATE %s_team_attributes SET won_championship = 1 WHERE season = %s AND '
./bbgm/core/game.py:                        g.db.execute(query, new_series)
./bbgm/core/game.py:                g.db.execute('SELECT player_id, contract_amount, contract_expiration FROM %s_player_attributes WHERE team_id = -1 AND contract_amount > 500', (g.league_id,))
./bbgm/core/game.py:                    g.db.execute('UPDATE %s_player_attributes SET contract_amount = %s, contract_expiration = %s WHERE player_id = %s', (g.league_id, amount, expiration, player_id))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_player_attributes SET free_agent_times_asked = free_agent_times_asked - 0.1 WHERE team_id = -1', (g.league_id,))
./bbgm/core/game.py:                g.db.execute('UPDATE %s_player_attributes SET free_agent_times_asked = 0 WHERE team_id = -1 AND free_agent_times_asked < 0', (g.league_id,))
./bbgm/core/play_menu.py:    g.db.execute('SELECT pm_status FROM %s_game_attributes WHERE season = %s', (g.league_id, g.season))
./bbgm/core/play_menu.py:        g.db.execute('UPDATE %s_game_attributes SET pm_status = %s WHERE season = %s', (g.league_id, status, g.season))
./bbgm/core/play_menu.py:    g.db.execute('SELECT pm_phase FROM %s_game_attributes WHERE season = %s', (g.league_id, g.season))
./bbgm/core/play_menu.py:        g.db.execute('UPDATE %s_game_attributes SET pm_phase = %s WHERE season = %s', (g.league_id, phase_text, g.season))
./bbgm/util/lock.py:    g.db.execute('UPDATE %s_game_attributes SET games_in_progress = %s', (g.league_id, status))
./bbgm/util/lock.py:    g.db.execute('UPDATE %s_game_attributes SET trade_in_progress = %s', (g.league_id, status))
./bbgm/util/lock.py:    g.db.execute('UPDATE %s_game_attributes SET negotiation_in_progress = %s', (g.league_id, status))
./bbgm/util/lock.py:    g.db.execute('SELECT games_in_progress FROM %s_game_attributes', (g.league_id))
./bbgm/util/lock.py:    g.db.execute('SELECT trade_in_progress FROM %s_game_attributes', (g.league_id))
./bbgm/util/lock.py:    g.db.execute('SELECT negotiation_in_progress FROM %s_game_attributes', (g.league_id))
./bbgm/util/lock.py:    g.db.execute('SELECT games_in_progress, trade_in_progress, negotiation_in_progress FROM %s_game_attributes', (g.league_id,))
./bbgm/util/lock.py:    g.db.execute('SELECT 1 FROM %s_trade', (g.league_id,))
./bbgm/util/lock.py:    g.db.execute('SELECT 1 FROM %s_negotiation WHERE resigning = 0', (g.league_id,))
./bbgm/util/lock.py:    g.db.execute('SELECT games_in_progress, trade_in_progress, negotiation_in_progress FROM %s_game_attributes', (g.league_id,))
./bbgm/util/lock.py:    g.db.execute('SELECT 1 FROM %s_trade', (g.league_id,))
./bbgm/util/lock.py:    g.db.execute('SELECT 1 FROM %s_negotiation WHERE resigning = 0', (g.league_id,))
./bbgm/util/decorators.py:        g.db.execute('SELECT user_id FROM leagues WHERE league_id = %s', (g.league_id,))
./bbgm/util/decorators.py:        g.db.execute('SELECT team_id, season, phase, schedule, version FROM %s_game_attributes LIMIT 1', (g.league_id,))
./bbgm/util/__init__.py:    g.db.execute('SELECT team_id, season, phase, schedule, version FROM %s_game_attributes LIMIT 1', (g.league_id,))
./bbgm/util/__init__.py:    g.db.execute('SELECT SUM(contract_amount) FROM %s_player_attributes WHERE team_id = %s AND contract_expiration >= %s', (g.league_id, team_id, g.season))
./bbgm/util/__init__.py:    g.db.execute('SELECT SUM(contract_amount) FROM %s_released_players_salaries WHERE team_id = %s', (g.league_id, team_id))
./bbgm/util/__init__.py:    g.db.execute('SELECT pa.player_id, pr.overall, pr.endurance FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.player_id = pr.player_id AND pa.team_id = %s', (g.league_id, g.league_id, team_id))
./bbgm/util/__init__.py:        g.db.execute('UPDATE %s_player_ratings SET roster_position = %s WHERE player_id = %s', (g.league_id, roster_position, player[0]))
./bbgm/util/__init__.py:    g.db.execute('SELECT COUNT(*)/30 FROM %s_team_stats WHERE season = %s', (g.league_id, g.season))
./bbgm/util/__init__.py:    g.db.execute('SELECT pa.player_id, pa.contract_amount, pa.contract_expiration FROM %s_player_attributes as pa, %s_player_ratings as pr WHERE pa.team_id = -1 AND pa.player_id = pr.player_id ORDER BY pr.overall + 2*pr.potential DESC', (g.league_id, g.league_id))
./bbgm/util/__init__.py:        g.db.execute('SELECT count(*) FROM %s_player_attributes WHERE team_id = %s', (g.league_id, team_id))
./bbgm/util/__init__.py:                    g.db.execute('UPDATE %s_player_attributes SET team_id = %s, contract_amount = %s, contract_expiration = %s WHERE player_id = %s', (g.league_id, team_id, amount, expiration, player_id))
./bbgm/league_views.py:    g.db.execute('SELECT abbreviation FROM %s_team_attributes WHERE team_id = %s AND season = %s', (g.league_id, g.user_team_id, g.season))
./bbgm/league_views.py:        g.db.execute('SELECT COUNT(*)/%s FROM %s_team_stats WHERE season = %s', (g.num_teams, g.league_id, g.season))
./bbgm/league_views.py:    g.db.execute('SELECT season FROM %s_team_attributes GROUP BY season ORDER BY season DESC', (g.league_id))
./bbgm/league_views.py:    g.db.execute('SELECT conference_id, name FROM %s_league_conferences ORDER BY conference_id ASC', (g.league_id,))
./bbgm/league_views.py:        g.db.execute('SELECT division_id, name FROM %s_league_divisions WHERE conference_id = %s ORDER BY name ASC', (g.league_id, conference_id))
./bbgm/league_views.py:    g.db.execute('SELECT season FROM %s_team_attributes GROUP BY season ORDER BY season DESC', (g.league_id))
./bbgm/league_views.py:    g.db.execute('SELECT player_id FROM %s_negotiation WHERE resigning = 0', (g.league_id,))
./bbgm/league_views.py:        g.db.execute('SELECT 1 FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/league_views.py:    g.db.execute('SELECT team_amount, team_years, player_amount, player_years, resigning FROM %s_negotiation WHERE player_id = %s', (g.league_id, player_id))
./bbgm/league_views.py:    g.db.execute('SELECT CONCAT(region, " ", name) FROM %s_team_attributes WHERE team_id = %s AND season = %s', (g.league_id, g.user_team_id, g.season))
./bbgm/league_views.py:        g.db.execute('SELECT region, name, abbreviation FROM %s_team_attributes WHERE team_id = %s', (g.league_id, teams[-1]['team_id']))
./bbgm/league_views.py:        g.db.execute('SELECT team_id FROM %s_player_attributes WHERE player_id = %s', (g.league_id, player_id))
./bbgm/league_views.py:            g.db.execute('UPDATE %s_player_ratings SET roster_position = %s WHERE player_id = %s', (g.league_id, roster_position, player_id))
./bbgm/league_views.py:        g.db.execute('SELECT team_id FROM %s_team_attributes WHERE season = %s AND abbreviation = %s', (g.league_id, g.season, abbreviation))
./bbgm/league_views.py:        g.db.execute('SELECT abbreviation FROM %s_team_attributes WHERE season = %s AND team_id = %s', (g.league_id, g.season, team_id))
